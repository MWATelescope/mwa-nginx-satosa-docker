user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    upstream satosa_server {
        # The name of the server is 'satosa' and matches the name
        # of the service in the compose file.
        server satosa:8080 fail_timeout=0;
    }

    server {
        listen 80;
        server_name proxy.mwatelescope.org;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen                    443 ssl;
        server_name               proxy.mwatelescope.org;
        ssl_certificate           /etc/nginx/https.crt;
        ssl_certificate_key       /etc/nginx/https.key;
        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers               AES256+EECDH:AES256+EDH:!aNULL;
        ssl_dhparam               /etc/nginx/dhparam.pem;
        ssl_session_cache         shared:SSL:10m;
        ssl_session_timeout       24h;
        ssl_buffer_size           1400;
        ssl_session_tickets       off;
        ssl_stapling              on;
        ssl_stapling_verify       on;
        resolver                  8.8.4.4 8.8.8.8 valid=300s;
        resolver_timeout          10s;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        # Path for static files.
        root /opt/static;

        location ~ ^/$ {
            return 301 https://$server_name/sp_info.html;
        }

        location / {
            # Checks for static file, if not found proxy to satosa_server.
            try_files $uri @satosa_server;
        }

        location @satosa_server {
            proxy_set_header       X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header       X-Forwarded-Proto https;
            proxy_set_header       Host $http_host;
            proxy_redirect         off;
            proxy_pass             http://satosa_server;
            proxy_intercept_errors on;
        }

        error_page 400 401 403 404 =500 /error/50x.html;
        error_page 500 502 503 504 /error/50x.html;

        location = /error/50x.html {
            root /opt/static;
        }
    }
}
